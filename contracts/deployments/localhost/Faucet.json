{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_frequency",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "funded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frequency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_frequency",
          "type": "uint256"
        }
      ],
      "name": "setFrequency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x057f30b516b0f93399d52c891be8c24b162f5eb247fc9fcf75c0f8de68fad868",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "840029",
    "logsBloom": "0x
    "blockHash": "0x4a6b4b5c6a5e0b8aa2b02ea0959934a5bd0196bab235a32593c4a7959afb5112",
    "transactionHash": "0x057f30b516b0f93399d52c891be8c24b162f5eb247fc9fcf75c0f8de68fad868",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x057f30b516b0f93399d52c891be8c24b162f5eb247fc9fcf75c0f8de68fad868",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x4a6b4b5c6a5e0b8aa2b02ea0959934a5bd0196bab235a32593c4a7959afb5112"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "840029",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "1000000000000000000",
    86400
  ],
  "numDeployments": 1,
  "solcInputHash": "eab9d49f02c0efb801c868a960abbf0c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_frequency\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"funded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_frequency\",\"type\":\"uint256\"}],\"name\":\"setFrequency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Faucet is Ownable {\\n  IERC20 public token;\\n\\n  uint256 public amount;\\n  uint256 public frequency;\\n  \\n  mapping(address => uint) public lockTime;\\n\\n  event funded(uint256 _amount);\\n  \\n  constructor(address _token, uint256 _amount, uint256 _frequency) {\\n    require(_token != address(0), \\\"Faucet: can't set the token address to the zero address\\\");\\n    token = IERC20(_token);\\n    amount = _amount;\\n    frequency = _frequency;\\n  }\\n\\n  function fund(address _to) public {\\n    require(block.timestamp > lockTime[_to], \\\"lock time has not expired. Please try again later\\\");\\n    require(balance() > amount, \\\"Not enough token funds in the faucet\\\");\\n\\n    token.transfer(address(uint160(_to)), amount);\\n\\n    lockTime[_to] = block.timestamp + frequency;\\n    emit funded(amount);\\n  }\\n\\n  function balance() public view returns (uint256) {\\n    return token.balanceOf(address(this));\\n  }\\n\\n  function setAmount(uint256 _amount) public onlyOwner {\\n    amount = _amount;\\n  }\\n\\n  function setFrequency(uint256 _frequency) public onlyOwner {\\n    frequency = _frequency;\\n  }\\n}\",\"keccak256\":\"0x6466e6c6b9fd5e8b69935002f8f71e7c0dbc97bc125a577d76715caeb8094a64\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200100938038062001009833981810160405281019062000037919062000292565b620000576200004b6200012160201b60201c565b6200012960201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620000c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c09062000375565b60405180910390fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002819055508060038190555050505062000397565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021f82620001f2565b9050919050565b620002318162000212565b81146200023d57600080fd5b50565b600081519050620002518162000226565b92915050565b6000819050919050565b6200026c8162000257565b81146200027857600080fd5b50565b6000815190506200028c8162000261565b92915050565b600080600060608486031215620002ae57620002ad620001ed565b5b6000620002be8682870162000240565b9350506020620002d1868287016200027b565b9250506040620002e4868287016200027b565b9150509250925092565b600082825260208201905092915050565b7f4661756365743a2063616e2774207365742074686520746f6b656e206164647260008201527f65737320746f20746865207a65726f2061646472657373000000000000000000602082015250565b60006200035d603783620002ee565b91506200036a82620002ff565b604082019050919050565b6000602082019050818103600083015262000390816200034e565b9050919050565b610c6280620003a76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063aa8c217c11610071578063aa8c217c1461013e578063b69ef8a81461015c578063ead50da31461017a578063f2fde38b14610198578063f426f03a146101b4578063fc0c546a146101d0576100a9565b806323024408146100ae578063271f88b4146100ca578063715018a6146100e65780638da5cb5b146100f0578063a4beda631461010e575b600080fd5b6100c860048036038101906100c39190610768565b6101ee565b005b6100e460048036038101906100df91906107cb565b6103ea565b005b6100ee6103fc565b005b6100f8610410565b6040516101059190610807565b60405180910390f35b61012860048036038101906101239190610768565b610439565b6040516101359190610831565b60405180910390f35b610146610451565b6040516101539190610831565b60405180910390f35b610164610457565b6040516101719190610831565b60405180910390f35b6101826104fa565b60405161018f9190610831565b60405180910390f35b6101b260048036038101906101ad9190610768565b610500565b005b6101ce60048036038101906101c991906107cb565b610583565b005b6101d8610595565b6040516101e591906108ab565b60405180910390f35b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054421161026f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026690610949565b60405180910390fd5b60025461027a610457565b116102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b1906109db565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826002546040518363ffffffff1660e01b81526004016103199291906109fb565b6020604051808303816000875af1158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c9190610a5c565b506003544261036b9190610ab8565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f936f47201eb468366c62d02d7434bd35dc11ca20a76a628ce9909f62838cafca6002546040516103df9190610831565b60405180910390a150565b6103f26105bb565b8060028190555050565b6104046105bb565b61040e6000610639565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915090505481565b60025481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b49190610807565b602060405180830381865afa1580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f59190610b01565b905090565b60035481565b6105086105bb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90610ba0565b60405180910390fd5b61058081610639565b50565b61058b6105bb565b8060038190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105c36106fd565b73ffffffffffffffffffffffffffffffffffffffff166105e1610410565b73ffffffffffffffffffffffffffffffffffffffff1614610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e90610c0c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107358261070a565b9050919050565b6107458161072a565b811461075057600080fd5b50565b6000813590506107628161073c565b92915050565b60006020828403121561077e5761077d610705565b5b600061078c84828501610753565b91505092915050565b6000819050919050565b6107a881610795565b81146107b357600080fd5b50565b6000813590506107c58161079f565b92915050565b6000602082840312156107e1576107e0610705565b5b60006107ef848285016107b6565b91505092915050565b6108018161072a565b82525050565b600060208201905061081c60008301846107f8565b92915050565b61082b81610795565b82525050565b60006020820190506108466000830184610822565b92915050565b6000819050919050565b600061087161086c6108678461070a565b61084c565b61070a565b9050919050565b600061088382610856565b9050919050565b600061089582610878565b9050919050565b6108a58161088a565b82525050565b60006020820190506108c0600083018461089c565b92915050565b600082825260208201905092915050565b7f6c6f636b2074696d6520686173206e6f7420657870697265642e20506c65617360008201527f652074727920616761696e206c61746572000000000000000000000000000000602082015250565b60006109336031836108c6565b915061093e826108d7565b604082019050919050565b6000602082019050818103600083015261096281610926565b9050919050565b7f4e6f7420656e6f75676820746f6b656e2066756e647320696e2074686520666160008201527f7563657400000000000000000000000000000000000000000000000000000000602082015250565b60006109c56024836108c6565b91506109d082610969565b604082019050919050565b600060208201905081810360008301526109f4816109b8565b9050919050565b6000604082019050610a1060008301856107f8565b610a1d6020830184610822565b9392505050565b60008115159050919050565b610a3981610a24565b8114610a4457600080fd5b50565b600081519050610a5681610a30565b92915050565b600060208284031215610a7257610a71610705565b5b6000610a8084828501610a47565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ac382610795565b9150610ace83610795565b9250828201905080821115610ae657610ae5610a89565b5b92915050565b600081519050610afb8161079f565b92915050565b600060208284031215610b1757610b16610705565b5b6000610b2584828501610aec565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b8a6026836108c6565b9150610b9582610b2e565b604082019050919050565b60006020820190508181036000830152610bb981610b7d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bf66020836108c6565b9150610c0182610bc0565b602082019050919050565b60006020820190508181036000830152610c2581610be9565b905091905056fea26469706673582212209bc7284779f1336b671ef432a53f47f220aa3bd2b1431ebe221a45b732a9c73464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063aa8c217c11610071578063aa8c217c1461013e578063b69ef8a81461015c578063ead50da31461017a578063f2fde38b14610198578063f426f03a146101b4578063fc0c546a146101d0576100a9565b806323024408146100ae578063271f88b4146100ca578063715018a6146100e65780638da5cb5b146100f0578063a4beda631461010e575b600080fd5b6100c860048036038101906100c39190610768565b6101ee565b005b6100e460048036038101906100df91906107cb565b6103ea565b005b6100ee6103fc565b005b6100f8610410565b6040516101059190610807565b60405180910390f35b61012860048036038101906101239190610768565b610439565b6040516101359190610831565b60405180910390f35b610146610451565b6040516101539190610831565b60405180910390f35b610164610457565b6040516101719190610831565b60405180910390f35b6101826104fa565b60405161018f9190610831565b60405180910390f35b6101b260048036038101906101ad9190610768565b610500565b005b6101ce60048036038101906101c991906107cb565b610583565b005b6101d8610595565b6040516101e591906108ab565b60405180910390f35b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054421161026f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026690610949565b60405180910390fd5b60025461027a610457565b116102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b1906109db565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826002546040518363ffffffff1660e01b81526004016103199291906109fb565b6020604051808303816000875af1158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c9190610a5c565b506003544261036b9190610ab8565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f936f47201eb468366c62d02d7434bd35dc11ca20a76a628ce9909f62838cafca6002546040516103df9190610831565b60405180910390a150565b6103f26105bb565b8060028190555050565b6104046105bb565b61040e6000610639565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915090505481565b60025481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b49190610807565b602060405180830381865afa1580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f59190610b01565b905090565b60035481565b6105086105bb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90610ba0565b60405180910390fd5b61058081610639565b50565b61058b6105bb565b8060038190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105c36106fd565b73ffffffffffffffffffffffffffffffffffffffff166105e1610410565b73ffffffffffffffffffffffffffffffffffffffff1614610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e90610c0c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107358261070a565b9050919050565b6107458161072a565b811461075057600080fd5b50565b6000813590506107628161073c565b92915050565b60006020828403121561077e5761077d610705565b5b600061078c84828501610753565b91505092915050565b6000819050919050565b6107a881610795565b81146107b357600080fd5b50565b6000813590506107c58161079f565b92915050565b6000602082840312156107e1576107e0610705565b5b60006107ef848285016107b6565b91505092915050565b6108018161072a565b82525050565b600060208201905061081c60008301846107f8565b92915050565b61082b81610795565b82525050565b60006020820190506108466000830184610822565b92915050565b6000819050919050565b600061087161086c6108678461070a565b61084c565b61070a565b9050919050565b600061088382610856565b9050919050565b600061089582610878565b9050919050565b6108a58161088a565b82525050565b60006020820190506108c0600083018461089c565b92915050565b600082825260208201905092915050565b7f6c6f636b2074696d6520686173206e6f7420657870697265642e20506c65617360008201527f652074727920616761696e206c61746572000000000000000000000000000000602082015250565b60006109336031836108c6565b915061093e826108d7565b604082019050919050565b6000602082019050818103600083015261096281610926565b9050919050565b7f4e6f7420656e6f75676820746f6b656e2066756e647320696e2074686520666160008201527f7563657400000000000000000000000000000000000000000000000000000000602082015250565b60006109c56024836108c6565b91506109d082610969565b604082019050919050565b600060208201905081810360008301526109f4816109b8565b9050919050565b6000604082019050610a1060008301856107f8565b610a1d6020830184610822565b9392505050565b60008115159050919050565b610a3981610a24565b8114610a4457600080fd5b50565b600081519050610a5681610a30565b92915050565b600060208284031215610a7257610a71610705565b5b6000610a8084828501610a47565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ac382610795565b9150610ace83610795565b9250828201905080821115610ae657610ae5610a89565b5b92915050565b600081519050610afb8161079f565b92915050565b600060208284031215610b1757610b16610705565b5b6000610b2584828501610aec565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b8a6026836108c6565b9150610b9582610b2e565b604082019050919050565b60006020820190508181036000830152610bb981610b7d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bf66020836108c6565b9150610c0182610bc0565b602082019050919050565b60006020820190508181036000830152610c2581610be9565b905091905056fea26469706673582212209bc7284779f1336b671ef432a53f47f220aa3bd2b1431ebe221a45b732a9c73464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 833,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)777"
      },
      {
        "astId": 835,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "amount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 837,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "frequency",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 841,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "lockTime",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)777": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}