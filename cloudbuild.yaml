steps:
  # Install Node.js dependencies
  - id: npm-install
    name: node:16
    entrypoint: npm
    args: ["install", "--frozen-lockfile"]
    timeout: "4000s"
    waitFor: ["-"]

  # Install Cloud SQL proxy
  - id: proxy-install
    name: node:16
    entrypoint: sh
    timeout: "4000s"
    args:
      - "-c"
      - "wget https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.4.0/cloud-sql-proxy.linux.amd64 -O cloud_sql_proxy && chmod +x cloud_sql_proxy"
    waitFor: ["npm-install"]

  # Migrate database schema to the latest version
  # =tcp:3306
  - id: migrate
    name: node:16
    entrypoint: sh
    env:
      - DATABASE_URL=$_DATABASE_URL
    args:
      - "-c"
      - "mkdir /cloudsql; chmod 777 /cloudsql; (./cloud_sql_proxy --unix-socket /cloudsql yellowingreen:us-central1:yellow-in-green-1-dev & sleep 2) && npx migrate prisma"
    timeout: "1200s"
    waitFor: ["npm-install", "proxy-install"]
  - id: build
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA", "."]
    waitFor: ["migrate"]
  - id: push
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA"]
    waitFor: ["build"]
  - id: deploy
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "$_SERVICE_NAME",
        "--image",
        "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA",
        "--region",
        "$_DEPLOY_REGION",
      ]
images: ["gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA"]
# steps:
#   # Build the container image
#   - name: "gcr.io/cloud-builders/docker"
#     args: ["build", "-t", "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA", "."]
#   - name: "gcr.io/cloud-builders/docker"
#     args: ["push", "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA"]
#   - name: gcr.io/cloud-builders/docker
#     entrypoint: sh
#     args:
#       - -c
#       - "wget -O /workspace/cloud_sql_proxy https://storage.googleapis.com/cloudsql-proxy/v1.16/cloud_sql_proxy.linux.386 &&  chmod +x /workspace/cloud_sql_proxy"
#   - name: node:16-bullseye-slim
#     timeout: 100s
#     entrypoint: sh
#     env:
#       - DATABASE_URL=$_DATABASE_URL
#     args:
#       - -c
#       - "(/workspace/cloud_sql_proxy -dir=/workspace -instances=yellowingreen:us-central1:yellow-in-green-1-dev=tcp:3306 & sleep 2) && npm prisma migrate deploy"
#   - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#     entrypoint: gcloud
#     args:
#       [
#         "run",
#         "deploy",
#         "$_SERVICE_NAME",
#         "--image",
#         "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA",
#         "--region",
#         "$_DEPLOY_REGION",
#       ]
# - name: "gcr.io/cloud-builders/npm"
#   entrypoint: sh
#   env:
#     - DATABASE_URL=$_DATABASE_URL
#   args:
#     - -c
#     - |
#       wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
#       chmod +x cloud_sql_proxy
#       ./cloud_sql_proxy -instances=yellowingreen:us-central1:yellow-in-green-1-dev=tcp:3306 & sleep 3;
#       npx prisma migrate deploy
# args:
#   - "prisma"
#   - "migrate"
#   - "deploy"
# "--build-arg", "REMIX_TOKEN=$_REMIX_TOKEN"

# availableSecrets:
#   secretManager:
#     - versionName: projects/$PROJECT_ID/secrets/${DATABASE_URL}/versions/latest
#       env: DATABASE_URL
