steps:
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA", "."]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "$_SERVICE_NAME",
        "--image",
        "gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA",
        "--region",
        "$_DEPLOY_REGION",
      ]
  - name: alpine:3.10
    entrypoint: sh
    args:
      - -c
      - "wget -O /workspace/cloud_sql_proxy https://storage.googleapis.com/cloudsql-proxy/v1.16/cloud_sql_proxy.linux.386 &&  chmod +x /workspace/cloud_sql_proxy"
  - name: "gcr.io/cloud-builders/npm"
    timeout: 100s
    entrypoint: sh
    env:
      - DATABASE_URL=$_DATABASE_URL
    args:
      - -c
      - "(/workspace/cloud_sql_proxy -dir=/workspace -instances=yellowingreen:us-central1:yellow-in-green-1-dev=tcp:3306 & sleep 2) && npx prisma migrate deploy"
  # - name: "gcr.io/cloud-builders/npm"
  #   entrypoint: sh
  #   env:
  #     - DATABASE_URL=$_DATABASE_URL
  #   args:
  #     - -c
  #     - |
  #       wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
  #       chmod +x cloud_sql_proxy
  #       ./cloud_sql_proxy -instances=yellowingreen:us-central1:yellow-in-green-1-dev=tcp:3306 & sleep 3;
  #       npx prisma migrate deploy
  # args:
  #   - "prisma"
  #   - "migrate"
  #   - "deploy"
images: ["gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA"]
# "--build-arg", "REMIX_TOKEN=$_REMIX_TOKEN"

# availableSecrets:
#   secretManager:
#     - versionName: projects/$PROJECT_ID/secrets/${DATABASE_URL}/versions/latest
#       env: DATABASE_URL
