datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id      String @id @default(cuid())
  address String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // password Password?
  // notes    Note[]
  submissions Submission[]
  games       Game[]
}

// model Password {
//   hash String

//   user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
//   userId String @unique
// }

// model Note {
//   id    String @id @default(cuid())
//   title String
//   body  String

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
//   userId String
// }

model AdminUser {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password AdminPassword?
}

model AdminPassword {
  hash String

  user   AdminUser @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String    @unique
}

model Question {
  id         String       @id @default(cuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  content    String       @unique
  answer     Answer?
  game       Game         @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gameId     String
  submission Submission[]
}

model Answer {
  hash       String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  questionId String   @unique
}

model Game {
  id        String     @id @default(cuid())
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  current   Boolean    @default(false)
  questions Question[]
  winner    User?      @relation(fields: [winnerId], references: [id])
  winnerId  String     @unique
}

model Submission {
  id          String   @id @default(cuid())
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String   @unique
  question    Question @relation(fields: [questionId], references: [id])
  questionId  String   @unique
  answer      String
}
