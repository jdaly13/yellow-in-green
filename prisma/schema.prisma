datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

generator erd {
  provider = "prisma-erd-generator"
  includeRelationFromFields = true
  disabled = true
}

model User {
  id      String @id @default(cuid())
  address String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // password Password?
  // notes    Note[]
  submissions Submission[]
  invalidSubmissions IndecentProposal[]
  currentGame Game?        @relation(fields: [gameId], references: [id])
  gameId      String?
}


model AdminUser {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password AdminPassword?
}

model AdminPassword {
  hash String

  user   AdminUser @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String    @unique
}

model Question {
  id         String       @id @default(cuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  content    String       @unique
  answer     Answer?
  game       Game         @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gameId     String
  submission Submission[]
  invalidSubmission IndecentProposal[]
}

model Answer {
  hash       String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  questionId String   @unique
}

model Game {
  id          String       @id @default(cuid())
  name        String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  current     Boolean      @default(false)
  questions   Question[]
  winnerId    String?
  winner      Winner?     
  submissions Submission[]
  invalidSubmissions IndecentProposal[]
  user        User[]
  nativePayoutAmount String?        
}

model Winner {
  id String
  triviaTransaction String?
  nativeTransaction String?
  nftTransaction String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  game       Game    @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gameId     String  @unique
  network    String?

}

model IndecentProposal {
  id          String   @id @default(cuid())
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
  question    Question @relation(fields: [questionId], references: [id])
  questionId  String   
  answer      String
  game        Game     @relation(fields: [gameId], references: [id])
  gameId      String
}

model Submission {
  id          String   @id @default(cuid())
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
  question    Question @relation(fields: [questionId], references: [id])
  questionId  String   
  answer      String
  game        Game     @relation(fields: [gameId], references: [id])
  gameId      String
}
